<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiClientDoesnotImplementIReadApiClientError" xml:space="preserve">
    <value>{TypeName} doesn't implement IReadApiClient.</value>
  </data>
  <data name="ApiClientInputNotInitializedError" xml:space="preserve">
    <value>API client input must be initialized before it is used.</value>
  </data>
  <data name="ApiEndpointDoesnotHaveValidSiteError" xml:space="preserve">
    <value>API endpoint does not have a valid site API client.</value>
  </data>
  <data name="ApiEndpointNotInitializedError" xml:space="preserve">
    <value>API endpoint is not initialized.</value>
  </data>
  <data name="AuthenticationTypeDomainMappingValidationMessage" xml:space="preserve">
    <value>An authentication type domain mapping is required for server to cloud migrations.</value>
  </data>
  <data name="ContentFilterBaseDebugMessage" xml:space="preserve">
    <value>{TypeName} filtered {ContentItem}</value>
  </data>
  <data name="ContentMappingBaseDebugMessage" xml:space="preserve">
    <value>{TypeName} mapped {ContentItem} to {MappedLocation}</value>
  </data>
  <data name="ContentTransformerBaseDebugMessage" xml:space="preserve">
    <value>{TypeName} transformed {ContentItem}</value>
  </data>
  <data name="EndpointInitializationError" xml:space="preserve">
    <value>One or more endpoints could not be initialized. Migration cannot start.</value>
  </data>
  <data name="FailedJobExceptionContent" xml:space="preserve">
    <value>A Tableau job failed. See status notes for details.</value>
  </data>
  <data name="FileEncryptionDisabledLogMessage" xml:space="preserve">
    <value>File encryption is disabled and should be re-enabled for production migrations.</value>
  </data>
  <data name="GroupUsersTransformerCannotAddUserWarning" xml:space="preserve">
    <value>Could not add a user to the destination Group {GroupName}. Reason: Could not find the destination user for {UserLocation}.</value>
  </data>
  <data name="InvalidTransformerPublishTypeValidationMessage" xml:space="preserve">
    <value>Migration transformer for publish type {0} is not supported by the migration pipeline. Did you mean {1}? Count: {2}</value>
  </data>
  <data name="MigrationErrorLogMessage" xml:space="preserve">
    <value>An error occurred during migration. Error: {Exception}</value>
  </data>
  <data name="MigrationItemErrorLogMessage" xml:space="preserve">
    <value>An error occurred migrating {ContentType} item "{SourcePath}". Error: {Exception}</value>
  </data>
  <data name="NetworkTraceExceptionLogMessage" xml:space="preserve">
    <value>HTTP {Method} {RequestUri} failed. Error: "{ErrorMessage}". Details: {Details}</value>
  </data>
  <data name="NetworkTraceLogMessage" xml:space="preserve">
    <value>HTTP {Method} {RequestUri} responded {ResponseStatus}. Details: {Details}</value>
  </data>
  <data name="NetworkTraceNotDisplayedDetails" xml:space="preserve">
    <value>&lt;Not Displayed&gt;</value>
  </data>
  <data name="NetworkTraceTooLargeDetails" xml:space="preserve">
    <value>&lt;Content Too Large&gt;</value>
  </data>
  <data name="NullValue" xml:space="preserve">
    <value>null</value>
  </data>
  <data name="PreviousManifestPlanMismatchWarning" xml:space="preserve">
    <value>The previous manifest was generated by a different plan. The result manifest may include entries that are not relevant to the migration.</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Tableau Migration SDK</value>
  </data>
  <data name="PublishedDataSourceReferenceNotFoundLogMessage" xml:space="preserve">
    <value>A data source reference for source content URL {ContentUrl} could not be updated in workbook {Location}. The content URL will not be updated.</value>
  </data>
  <data name="RestExceptionContent" xml:space="preserve">
    <value>An error was returned from the Tableau API:
URL: {0}
Code: {1}
Summary: {2}
Detail: {3}</value>
  </data>
  <data name="SectionException" xml:space="preserve">
    <value># Exception</value>
  </data>
  <data name="SectionRequestContent" xml:space="preserve">
    <value># Request Content</value>
  </data>
  <data name="SectionRequestHeaders" xml:space="preserve">
    <value># Request Headers</value>
  </data>
  <data name="SectionResponseContent" xml:space="preserve">
    <value># Response Content</value>
  </data>
  <data name="SectionResponseHeaders" xml:space="preserve">
    <value># Response Headers</value>
  </data>
  <data name="SiteSettingsSkippedDisabledLogMessage" xml:space="preserve">
    <value>Destination site settings were not validated - disabled by configuration.</value>
  </data>
  <data name="SiteSettingsSkippedNoAccessLogMessage" xml:space="preserve">
    <value>Destination site settings were not validated - administrator access is required in both source and destination sites.</value>
  </data>
  <data name="SiteSettingsExtractEncryptionDisabledLogMessage" xml:space="preserve">
    <value>The destination site has extract encryption disabled. This may cause migration errors for content with encrypted extracts. Enable extract encryption on the destination site, or register a transformer that disables extract encryption during migration.</value>
  </data>
  <data name="SourceUserNotFoundLogMessage" xml:space="preserve">
    <value>Could not find destination user to map for source user {SourceUsername} (ID: {SourceUserId}).</value>
  </data>
  <data name="TableauCloudUsernameMappingValidationMessage" xml:space="preserve">
    <value>A Tableau Cloud username mapping is required for server to cloud migrations.</value>
  </data>
  <data name="TimeoutJobExceptionMessage" xml:space="preserve">
    <value>A Tableau job timed out.</value>
  </data>
  <data name="UnknownFilterContentTypeValidationMessage" xml:space="preserve">
    <value>Migration filter for content type {0} is not supported by the migration pipeline. Count: {1}</value>
  </data>
  <data name="UnknownMappingContentTypeValidationMessage" xml:space="preserve">
    <value>Migration mapping for content type {0} is not supported by the migration pipeline. Count: {1}</value>
  </data>
  <data name="UnknownTransformerPublishTypeValidationMessage" xml:space="preserve">
    <value>Migration transformer for publish type {0} is not supported by the migration pipeline. Count: {1}</value>
  </data>
  <data name="PermissionsTransformerGranteeNotFoundWarning" xml:space="preserve">
    <value>Could not transform permissions. The {granteeType} for {UserOrGroupName} was not found at the destination.</value>
  </data>
  <data name="ProjectReferenceNotFoundMessage" xml:space="preserve">
    <value>Project {ProjectName} was not found for {ContentType} {ContentName}.</value>
  </data>
  <data name="OwnerNotFoundMessage" xml:space="preserve">
    <value>Owner {OwnerId} was not found for {ContentType} {ContentName}.</value>
  </data>
  <data name="FailedToGetDefaultPermissionsMessage" xml:space="preserve">
    <value>Failed to get Default Permissions {UrlSegment} for {ProjectId}.</value>
  </data>
</root>