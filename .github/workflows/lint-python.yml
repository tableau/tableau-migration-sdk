name: Lint Python Workflow

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string

env:
  DOTNET_NOLOGO: "true"
  MIG_SDK_PYTHON_BUILD: ${{ vars.MIG_SDK_PYTHON_BUILD }}

jobs:
  lint-python:
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(vars.BUILD_OS) }}
        config: ${{ fromJSON(vars.BUILD_CONFIGURATIONS) }}

    runs-on: ${{ matrix.os }}
    name: Lint Python in ${{ inputs.working-directory }} on ${{ matrix.os }}
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_TEST_VERSIONS }}
          cache: "pip" # caching pip dependencies

      # Cache Hatch environments
      - name: Cache Hatch environments
        uses: actions/cache@v4
        with:
          # Default Hatch env location relative to working-directory.
          path: ${{ inputs.working-directory }}/.hatch
          # Key depends on OS and python version, plus project/dependency files
          key: ${{ runner.os }}-py${{ vars.PYTHON_TEST_VERSIONS }}-hatch-${{ hashFiles('./pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py${{ vars.PYTHON_TEST_VERSIONS }}-hatch-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      # Lint with ruff
      - name: Lint with ruff
        run: python -m hatch run lint:lint
